Frequently Asked Questions

What is a binning method?
A binning method assigns an identifier to every sequence in a sequence sample, where the total number of identifiers is ideally less than the total number of sequences. Thus the act of binning places the sequences in to broader categories. A bin includes all the sequences with the same identifier. If these identifiers identify taxa from a taxonomy, the method is a taxonomic binning method.

What is a profiling method?
A profiling method returns an estimate for the frequencies of different taxa in a sequenced microbial community based on analysis of the sequence sample. The main output is a vector with relative abundances for the different sample taxa. The relative abundances of taxa from the same 'rank' of the taxonomy (e.g. superkingdom, including archaea, bacteria and eukaryotes) cannot sum up to more than 1.

What is an assembly method?
An assembly method returns longer nucleotide sequences derived by puzzling together individual sequencing reads. These sequences are assumed to represent contiguous stretches from one genome included in the microbiome sample that was sequenced.

Is CAMI open and transparent?
Yes! The development process is done in an open community. Everybody is invited to participate. People who intend to participate will not be involved in any part of the development process that provides any information or advantage for the actual competition.

Where do I find the relevant information when I want to participate in the CAMI contest?
You can find all information on the CAMI webpage, on the page entitled 'Contest participation'.

What is the purpose of the google+-group? 
We use it for video hangouts in planning the CAMI contest because we are working with people from around the world. We want to get your feedback and invite tool developers to interact with the CAMI team here in defining the CAMI contest already in the development phase. You do not have to join the group if you want to participate in the contest.

Why should I participate in the contest?
There are various reasons why you might want to participate. 
- First, you will receive feedback for your methods performance on a larger number of data sets. 
- Facilitated future benchmarking. By submitting your tool in a docker container, you will be able to continuously monitor its performance against other tools that have been submitted this way. It will be possible to automatically run all tools on new data sets and include new performance metrics easily. If you update your tool, you simply have to update your docker container that you submitted. 
- Coauthorship. Contest participants who would like to disclose their identities and deliver reproducible results have the option to be authors on a joint CAMI evaluation publication.
- We will distribute three participation awards of thousand Euros each among participants submitting reproducible results and performing better than a baseline method across all categories.

Why do I have to register?
If there is a problem with the submitted files, we have the chance to contact the contestant. In a later stage of the competition we want to show evaluation metrics with an anonymized name for the results (assembly, profiling, binning) provided by the contestant. Participants can choose to have their results displayed anonymously only, or reveal their identities for participation in a joint publication. 

When will the contest start?
The current plan is that it will begin at the beginning of 2015.

How long will the CAMI contest last?
CAMI will be open overall for 3 months. First, six weeks for the assembly methods, and methods that process read data sets. After six weeks, a gold standard assembly will be provided for methods that work on assembled data sets.

How large will the data sets be that will be generated?
This will be around 120 Gbp of sequence overall and 8-9 samples. 

If I do not have access to sufficient compute time on my own, what are my options?
The Pittsburgh Supercomputing Center (PSC) is making compute time and storage available on their SGI UV1000 system, Blacklight to do genome assembly for the CAMI challenge. Blacklight consists of three nodes with 8-16 TB of shared memory and up to 2,048 cores per node. If request these resources during registration, PSC will contact you to determine your software and computing needs and to set up your account on Blacklight.

What kind of data sets will be provided?
We will provided simulated metagenome data sets created from published and unpublished (contributed) isolate genome sequences, with as much realism built in as we could manage. For instance, they will include multiple strains from the same species. 

Why are we providing new simulated data sets and not using existing public ones?
For real metagenome samples, we do not know which read comes from which genome, and in our simulations, this should be the same way. All public simulated samples also have the correct solution also available, which would make the contest less realistic. Furthermore, we want to simulate different relevant scenarios that are used in metagenomics for which no simulated data sets exist.

How can I download data? 
You have to do the following steps.
1.<a href="https://data.cami-challenge.org/accountLoginView">Login</a> or <a href="https://data.cami-challenge.org/accountRegisterView">Register</a>
2.Go to the <a href="https://data.cami-challenge.org/participate">Up- and Download</a> section.
3.Find the dataset you want to download.
4.If you want to download datasets from the restricted download section, you will have to read and accept the terms and conditions. After accepting the terms you are allowed to download the samples. If you want to download a dataset from the public download section, you can click on the "public download section" button and download any sample you want.

I have problems finding out which output format I should use, what should I do?
You can contact us to get advice.

How do I submit my results?
The best way will be if you provide your tool along with the prediction files. The tool should be installed in a docker container following our instructions on http://cami-challenge.org/participate, which writes the output to a file with a specific name in a specific directory. You can upload this docker container to the contest website and we will rerun your tool to see if the results are entirely reproducible. If your tool requires standard reference databases to run, many of them will be provided on the website. How you link to these is explained in the instructions.

Can I submit the results without providing my tool?
If you want to submit your results without them being reproducible, you can do so and get the feedback for your personal information. In this case, your tool will only be considered to be included in a joint result publication, if it is a publicly accessible webtool.

How can I submit my results without providing my tool?
You have to do the following steps after the download of a dataset and the execution of your pipeline on it.
1.Login or Register
2.Go to the Up- and Download section.
3.Find the dataset you want to submit for.
4.Click the Add Assembly, Add Binning or Add Profiling button.
5.Fill in the form. For the fingerprint field you have to download our cami client jar(See next step).
6.Run the cami client: java -jar camiClient.jar with the parameter -fa for assembly files -fb for binning files or -fp for profiling files. Now enter the returned fingerprint in the input field. 
<br>
<b>Note!</b> You have to execute the cami client jar and submit the form every time you change the file.
<br>
7.After submitting the form you will get a credentials file that allows you to upload the file in the next 36 hours. If you want to submit your file to a later time, just submit the form and you will get new credentials.
Upload your file with: java -jar camiClient.jar -u credentials_file file_to_upload. You can upload up to 36 hours after the competition end.
8.(Optional) Register a docker container for reproduceability. We are using the format of nucleotid.es. Please read the description in order to fill out the dockerhubId and proc field.

How to use the cami Client? 
The java based CAMI client jar is for the validation and upload of assembly, binning and profiling files.
Requirements are a Unix-like operating system (e.g. Linux, OSX, Solaris, *BSD) and Java 7 (e.g. Oracle JDK 7, OpenJDK 7).
<br>
usage: java -jar camiClient.jar [-af <assembly_file>] [-bf <binning_file>] [-h] [-pf <profiling_file>] [-u <credentials_file file_to_upload>] [-version] 
 Validates and uploads binning, profiling and assembly files.
 -af,--assemblyFingerprint <assembly_file>       
  Computes fingerprint of an assembly file.
 -bf,--binningFingerprint <binning_file>          
  Computes fingerprint of a binning file.
 -h,--help                                      
  Print the help of the application
 -pf,--profilingFingerprint <profiling_file>     
  Computes fingerprint of a profiling file.
 -u,--upload <credentials_file file_to_upload>   
  You can get the credentials file from the cami website. 
  File to upload is the assembly, binning or
  profiling file you want to upload.
 -version,--v                                    
  Print the version of the application

Where do I get the fingerprint?
You can get the fingerprint with our cami client jar. Run the cami client: java -jar camiClient.jar with the parameter -af for assembly files -bf for binning files or -pf for profiling files.
Your files must be in a specific format, which is explained in the following questions.
<b>What is the format of the CAMI assembly file?</b>
<b>What is the format of the CAMI binning file?</b>
<b>What is the format of the CAMI profiling file?</b>
<br>
<b>Note!</b> You have to execute the cami client jar and submit the form every time you change the file. 

What is the format of the CAMI assembly file?
The CAMI assembly format is a FASTA-formatted contig and scaffold file.
<u>1.The header section</u>
The header section of the FASTA files must follow the standard FASTA guidelines and must start with ">" character followed by any alphanumeric "[A-Za-z]", whitespace (spaces and tabs), brackets "[]", underscores "_", colons "[:;]", commas ",", periods ".", pipes "|", or hypens "-" ending with a newline character.
<br>
Examples:
>gi|5524211|gb|AAD44166.1| cytochrome b [Elephas maximus maximus]
ATCTG
>scaffold-1
ATCTG
>Contig 2, Node 1
ATCTG
<br>
<u>2.The sequence section</u>
Sequences must contain only capitalized nucleotide characters, including the ambiguous character 'N': /[ATCGN]+/.
There is no requirement on the number of nucleotides per line, but community best practices advises limiting the amount of nucleotides to 120 characters.
<u>3.Contigs vs. scaffolds</u>
Contigs must not contain any stretches of greater than 5 ambiguous bases (Ns) in a row. Contigs must be split by the user at these points into smaller contigs. There are no restrictions on the amount of contiguous ambiguous bases in scaffolds. Contigs should be provided in a file called: contigs.fna Scaffolds should be provided in a file called: scaffolds.fna
<u>4.Examples</u>
>NODE_1331_length_1852_cov_20.7969_ID_2661
CTATTTTTAAATATCCGCGTACTTACTGAGTTATCGTGGCAGTTTTTGCTAATTTTGCGATTTTTGCCACGATAACTTGT
TAAAAAATATGACGTCTGCAATTCTTGTTGCTTTTACACTACAAAAAAGATAAAATATTAGTATGAAAGCAACAGAAGTG
>54257
AAAATAGACGCACAAGCTGGCACATCACAACGAATAACCAAGCATAGAAATGAAGAAAAAGAAAATAATCATGGGAGTAG
GAACAGGAATCCTTTTGGCTGCTGTTGCTTTTTGGGGGTGGCATTCCACACAAGCAACTTCGACAGAAATAACAAATGAA

What is the format of the CAMI binning file? 
CAMI stands for Critical Assessment of Metagenome Interpretation. The CAMI binning format was specified for this competition and is intended to serve as a standard format for (taxonomic) binning methods. It is a TAB-delimited text format consisting of a header section and an output section. The header must be prior the output. The Header line starts with '@@'.
Each output line has 2 mandatory fields: The SEQUENCEID and either TAXID or BINID.
<u>1. The header section</u>
The header begins with '@@' and includes tab-separated column tags, where TAG is a variable string that defines the content and format for the output section. The order of the columns is not important. This line should match: /^\@\@[A-Za-z0-9]+(\t[A-Za-z0-9\_\s]+)+/
For instance:
The following lists all defined tags.
  <b>SEQUENCEID</b>
  <b>BINID</b>
  <b>TAXID</b>
Further optional columns can be appended to the right.
<br>
Example:
@@SEQUENCEID TAXID
or
@@SEQUENCEID BINID
or
@@SEQUENCEID TAXID BINID
or
@@SEQUENCEID TAXID BINID SCORE MYCOLUMN2 MYCOLUMN3
<br>
<u>2. The Output section</u>
Each output line should match: /^[A-Za-z0-9]+(\t[A-Za-z0-9]+(\.[0-9]+)?)+/ SEQUENCEID specifies the ID of either a read or a contig sequence (depending on the sample).
The TAXID is a taxonomic assignment for your binned sequences (according to the provided taxonomy version from the download site) and will be used for evaluation of your predictions with taxonomy-based measures. If you create bins that do not include taxonomic assignments you do not need to include the TAXID column, but only the BINID column, in your output.
The BINID entries can be arbitrary alphanumeric identifiers for the bins. No taxonomy-based evaluation will be performed using the entries in this column. If you create taxonomic bins as output without further resolution, you do not need to include the BINID colummn, but only the TAXID column, in your output.
The third case is if you perform taxonomic binning and additionally resolve bins below existing taxonomic IDs, e.g. to define bins representing novel strains. In this case, you add both the TAXID field and the BINID field to your output (see example output below). It will be easiest to check for consistency for us, if you in this case use for the BINID the TAXID entry and a numeric identifier appended (e.g. 562.2).
Further columns with additional information can be appended to the right.
<u>3. Examples</u>
A
@@SEQUENCEID  TAXID	BINID
read1201	123	123
read1202	123	123
read1203	131564	131564
read1204	562	562.1
read1205	562	562.2
<br>
B
@@SEQUENCEID	TAXID
read1201	123
read1202	123
read1203	131564
read1204	562
read1205	562
<br>
C
@@SEQUENCEID	BINID
read1201	12346BIN
read1202	ANOTHERBIN
read1203	BIN6
read1204	BIN5

What is the format of the CAMI profiling file? 
CAMI stands for Critical Assessment of Metagenome Interpretation. The CAMI taxonomic profiling format was specified for this contest and is intended to serve as a standard format for taxonomic profiling methods. It is a TAB-delimited text format consisting of a header section and an output section.
The header must be prior the output. The Header line starts with '@@'.
Each output line has 4 mandatory fields: The TAXID, the RANK, TAXPATH and the PERCENTAGE. Further optional columns can be appended to the right.
<u>1. The header section</u>
The header line begins with '@@' and includes tab-separated column tags, where TAG is a variable string that defines the content and format for the output section.
The order of the columns should match: TAXID RANK TAXPATH PERCENTAGE This line should also match: /^\@\@[A-Za-z]+(\t[A-Za-z]+)+/
For instance:
@@TAXID	RANK	TAXPATH	PERCENTAGE
<u>2. The Output section</u>
The TAXID specifies a unique alphanumeric ID for a node in a reference tree such as the NCBI taxonomy. This will be used for evaluation of your predictions with taxonomy-based measures. If you resolve to bins below existing taxonomic IDs in your reference tree, e.g. to resolve novel strains, you can append a numeric identifier to your classification, e.g. 5232.1(according to the provided taxonomy version from the download site).
RANK includes alphanumeric identifiers that define ranks in the reference taxonomy at which the respective taxon is located. The used ranks in the NCBI taxonomy and in the CAMI contest are: superkingdom phylum class order family genus species strain.
The PERCENTAGE field specifies what percentage of the sample was assigned to the respective TAXID. The PERCENTAGE can be a real number between 0 and 100. The percentages given for all taxa from the same rank should sum up to <= 100%, that is, if something is unassigned, this will be reflected in a percentage of less than 100% being assigned.
The TAXPATH and TAXPATH_SN tag is the path from the root of the reference taxonomy to the respective taxon, where alphanumeric identifiers such as the TAXIDs (TAXPATH) or the taxonomic names (TAXPATH_SN) for all taxa that lie on this path are included. We are not parsing this column for the competition but will use the distributed NCBI reference taxonomy version. Please ensure that your predictions comply with this version. Taxonomic identifers in the TAXPATH and TAXPATH_SV for different taxonomic ranks are separated by "|". If a TAXID is missing at a rank or there is no name, this can be marked with an empty entry in the TAXPATH and TAXPATH_SN "||". For partial paths from the root to an internal node, you only need to fill in the path until you reach the node.
<br>
Examples:
Example for TAXPATH_SN:
Archaea|Thaumarchaeota|||Aigarchaeota archaeon JGI 0000001-A7
<br>
Example for TAXPATH
2157|651137 |651142 |1104572 |1052838
<br>
Further fields with additional information can be appended to the right. Each output line should match: /^([A-Za-z0-9\|\_\s]\t)+([0-9]{0,3}\.[0-9]+)/
<u>3. Example</u>
<br>
@@TAXID	RANK	TAXPATH	TAXPATH_SN	PERCENTAGE
2	superkingdom	2	Bacteria	98.81211
2157	superkingdom	2157	Archaea	1.18789
1239	phylum	2|1239	Bacteria|Firmicutes	59.75801
1224	phylum	2|1224	Bacteria|Proteobacteria	18.94674

I cannot get the docker installation to work, what do I do?
Please contact us, we are happy to help.

Can I use special Hardware for a Dockers container (like GPUs, ...)?
Yes, all hardware platforms are supported. If you don't have access to the required hardware, please contact us regarding compute resources the Pittburgh Supercomputing Center could provide to you. This blog post describes how to run CUDA code in a Docker container: http://stackoverflow.com/questions/25185405/using-gpu-from-a-docker-container

How does the speed of a method contribute to the result? Is the contest mainly focused on precision and –recall?
CAMI will use multiple evaluation metrics for assessing performance. The most suitable ones to represent relevant performance aspects to both users and developers will be determined in a meeting after the contest.

Do I have to submit results for binning, assembly and profiling?
You are free to submit for one or multiple tasks, there is no need to submit results for all of them.

Do I have to submit my codes in any particular language?
You can submit your codes / software in any language you like. It should be installed ready to execute in a docker container. The instructions how to install it we will make available soon. We will also offer help with this, if wanted, via Skype.
